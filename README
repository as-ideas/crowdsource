# crowdsource
a collaborative crowd sourcing and funding tool using virtual currency


crowdsource
===========


Example developer run config
----------------------------
java -jar crowdsource-example.jar -Dspring.profiles.active=ALLOW_HTTP,CREATE_USERS


Token signing
-------------
CrowdSource uses JWT with a token signing key. These (tokensigningkey/tokensigningkey.pub) must be present under /src/main/resources.
You can generate a pair of your own using ssh-keygen.


Persistence
-----------
CrowdSource uses MongoDB. You should provide the DB hosts comma-separated via property de.axelspringer.ideas.crowdsource.db.hosts.
Eg java -jar ... -Dde.axelspringer.ideas.crowdsource.db.hosts=hosta,hostb,hostc
For local development you can use the embed-mongo-maven-plugin that is used in the blackbox-tests as well.
Simply run mvn com.github.joelittlejohn.embedmongo:embedmongo-maven-plugin:0.1.12:start -Dembedmongo.wait.


Mailserver
----------
CrowdSource sends Mails for some occassions. In the example-app a mailserver is started and the mails are exposed via a rest endpoint under /mails.
This is handy for local development as well as integration testing.


Spring Profiles
---------------
ALLOW_HTTP
When the spring profile ALLOW_HTTP is enabled the default behaviour of redirecting http requests to https will be disabled.

CREATE_USERS
Will cause creation of default users configured in MongoUserDetailsService.java on application startup.


Frontend
--------

1: install node.js/npm
2: run 'npm install -g karma-cli'

During maven build, the maven-exec-plugin will execute 'npm install' in the crowdsource-frontend directory, which also executes 'bower install'
(see postinstall script in package.json). After this, maven-exec-plugin will execute 'npm run package' (again, a script configured in package.json).
This builds the frontend code by calling gulp.

For local development, 'npm run package' can be run at any time inside the crowdsource-frontend directory to recompile the frontend code. 'npm run watch' helps even more
(which actually calls 'gulp watch') to automatically watch for any changes made to frontend source files and recompile on the fly.

The reason for running 'npm run ...' commands instead of the command directly (e.g. 'gulp') is that gulp must not be installed globally on the developer's machine or on the
CI server. npm will still find the locally installed executables from node_modules/.bin.


---
TODO: review below (old docu)


PHANTOMJS/CHROME/FIREFOX

Enable phantomjs-profile (-Pphantomjs) to use phantomjs (will be downloaded).
Specifiy path to chromedriver/chrom in test.properties to use chrome (untested).
Firefox is the fallback. Do nothing and use the worst possible browser by default.


CI-Server

Give this parameter in your build's maven step: clean verify -Pphantomjs  -Dde.axelspringer.ideas.crowdsource.test.applicationhost=54.154.213.220.
